// Code generated by joker. DO NOT EDIT.
// Code generated by joker. DO NOT EDIT.
// Code generated by joker. DO NOT EDIT.

package {{.Package}}

import (
	"gorm.io/gorm"
)

type {{.Model}}Entity struct{
	DB *gorm.DB
}

func New{{.Model}}Model(db *gorm.DB) *{{.Model}}Entity {
	return &{{.Model}}Entity{
		DB:db,
	}
}

// 根据id查询单条
func (entity *{{.Model}}Entity) GetById(id int32) (info *{{.Model}},err error) {
	err = entity.DB.Model({{.Model}}{}).
		Limit(1).
		Find(&info, id).Error
	return info, err
}

// 根据条件查询
func (entity *{{.Model}}Entity) GetMapWhere(where map[string]interface{}, fields ...string) (list []map[string]interface{}, err error) {
	db := entity.DB.Model({{.Model}}{})
	if len(fields) > 0 {
		db = db.Select(fields)
	}
	if where != nil {
		db = db.Where(where)
	}
	err = db.Find(&list).Error

	return list, err
}

// 判断id是否存在
func (entity *{{.Model}}Entity) ExistsId(id int32) (bool, error) {
	var tactics TacticsGroup
	db := entity.DB.Model(TacticsGroup{})
	if tacticsId != 0 {
		db = db.Where("id != ?", tacticsId)
	}

	err := db.Select("id").
		Where("group_name = ?", tacticsName).
		First(&tactics).Error
	if err == gorm.ErrRecordNotFound {
		return false, nil
	} else if err != nil {
		return false, err
	}
	return true, nil
}